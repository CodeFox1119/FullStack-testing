{"version":3,"file":"static/js/55.7ec4cdd7.chunk.js","mappings":"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","sources":["components/header.js","utils/helpers.js","components/RainWater.js","pages/Scene.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport {\r\n  Navbar,\r\n  MobileNav,\r\n  Typography,\r\n  Button,\r\n  IconButton,\r\n} from \"@material-tailwind/react\";\r\n \r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function Header() {\r\n  const [openNav, setOpenNav] = useState(false);\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    window.addEventListener(\r\n      \"resize\",\r\n      () => window.innerWidth >= 960 && setOpenNav(false)\r\n    );\r\n  }, []);\r\n \r\n  const navList = (\r\n    <ul className=\"mb-4 mt-2 flex flex-col gap-2 lg:mb-0 lg:mt-0 lg:flex-row lg:items-center lg:gap-6\">\r\n      <Typography\r\n        as=\"li\"\r\n        variant=\"small\"\r\n        color=\"blue-gray\"\r\n        className=\"p-1 font-normal\"\r\n      >\r\n        <a href=\"#\" className=\"flex items-center\" onClick={() => navigate('/')}>\r\n          Scen\r\n        </a>\r\n      </Typography>\r\n      <Typography\r\n        as=\"li\"\r\n        variant=\"small\"\r\n        color=\"blue-gray\"\r\n        className=\"p-1 font-normal\"\r\n      >\r\n        <a href=\"#\" className=\"flex items-center\" onClick={() => navigate('/admin')}>\r\n          Admin\r\n        </a>\r\n      </Typography>\r\n    </ul>\r\n  );\r\n \r\n  return (\r\n    <Navbar className=\"mx-auto py-2 px-4 lg:px-8 lg:py-4 max-w-none\">\r\n      <div className=\"container mx-auto flex items-center justify-between text-blue-gray-900\">\r\n        <Typography\r\n          as=\"a\"\r\n          href=\"#\"\r\n          variant=\"small\"\r\n          className=\"mr-4 cursor-pointer py-1.5 font-normal\"\r\n        >\r\n          <span>Testing Task</span>\r\n        </Typography>\r\n        <div className=\"hidden lg:block\">{navList}</div>\r\n        <IconButton\r\n          variant=\"text\"\r\n          className=\"ml-auto h-6 w-6 text-inherit hover:bg-transparent focus:bg-transparent active:bg-transparent lg:hidden\"\r\n          ripple={false}\r\n          onClick={() => setOpenNav(!openNav)}\r\n        >\r\n          {openNav ? (\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              fill=\"none\"\r\n              className=\"h-6 w-6\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth={2}\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                d=\"M6 18L18 6M6 6l12 12\"\r\n              />\r\n            </svg>\r\n          ) : (\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"h-6 w-6\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth={2}\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                d=\"M4 6h16M4 12h16M4 18h16\"\r\n              />\r\n            </svg>\r\n          )}\r\n        </IconButton>\r\n      </div>\r\n      <MobileNav open={openNav}>\r\n        <div className=\"container mx-auto\">\r\n          {navList}\r\n        </div>\r\n      </MobileNav>\r\n    </Navbar>\r\n  );\r\n}","const radians = (degrees) => {\r\n    return degrees * Math.PI / 180;\r\n  }\r\n  \r\n  const distance = (x1, y1, x2, y2) => {\r\n    return Math.sqrt(Math.pow((x1 - x2), 2) + Math.pow((y1 - y2), 2));\r\n  }\r\n  \r\n  const map = (value, istart, istop, ostart, ostop) => {\r\n    return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));\r\n  }\r\n  export { radians, distance, map };","import React, { useState, useEffect } from \"react\"\r\nimport * as THREE from 'three'\r\nimport Sine from \"gsap\";\r\nimport TweenMax from \"gsap\";\r\nimport { useFrame } from '@react-three/fiber'\r\nimport { map, distance } from '../utils/helpers';\r\n\r\n\r\n\r\nexport default function RainWater() {\r\n\r\n  const waterMesh = React.useRef();\r\n  const [waterDropPositions,] = useState([\r\n    { x: 13, z: 23 },\r\n    { x: 1, z: -13 },\r\n    { x: -2, z: 4 },\r\n    { x: 10, z: -3 },\r\n    { x: 1, z: -3 },\r\n    { x: 2, z: -3 },\r\n    { x: -1.2, z: 3 },\r\n    { x: 1.2, z: 3.5 },\r\n    { x: -1, z: 8 },\r\n    { x: 12, z: 13 },\r\n  ])\r\n  const [pause, setPause] = useState(null)\r\n  const [meshes, setMeshes] = useState([]);\r\n  const [ripple, setRipple] = useState({})\r\n  const [angle, setAngle] = useState(0)\r\n  const [radius, setRadius] = useState(1)\r\n  const [motion, setMotion] = useState(0)\r\n\r\n  const grid = { cols: 50, rows: 50 };\r\n  const velocity = -.2;\r\n  const waveLength = 300;\r\n  const gutter = { size: 0 }\r\n\r\n\r\n\r\n  const getRandomWaterDropPosition = () => {\r\n    return waterDropPositions[Math.floor(Math.random() * Math.floor(waterDropPositions.length))];\r\n  }\r\n\r\n  const addFloor = () => {\r\n    const geometry = new THREE.PlaneGeometry(100, 100);\r\n    const material = new THREE.ShadowMaterial({ opacity: 0.3 });\r\n    let floor = new THREE.Mesh(geometry, material);\r\n    floor.name = 'floor';\r\n    floor.position.y = -1;\r\n    floor.rotateX(- Math.PI / 2);\r\n    floor.receiveShadow = true;\r\n    waterMesh.current.add(floor);\r\n  }\r\n\r\n\r\n  const addWaterDrop = () => {\r\n    if (waterMesh.current) {\r\n      const geometry = new THREE.BoxGeometry(0.05, 1, 0.05);\r\n      // const geometry = new THREE.BoxBufferGeometry(0.05, .3, 0.05);\r\n      const material = new THREE.MeshStandardMaterial({ color: 0xffffff, emissive: 0x333399, transparent: true });\r\n      const waterDrop = new THREE.Mesh(geometry, material);\r\n      return waterDrop;\r\n    }\r\n  }\r\n  const getMesh = (geometry, material) => {\r\n    const mesh = new THREE.Mesh(geometry, material);\r\n    mesh.castShadow = true;\r\n    mesh.receiveShadow = true;\r\n    return mesh;\r\n  }\r\n\r\n  const createGrid = () => {\r\n    const groupMesh = new THREE.Object3D();\r\n    const meshParams = {\r\n      color: 0xffffff,\r\n      emissive: 0x333399,\r\n      metalness: 0.5,\r\n      opacity: 0.1,\r\n      transparent: true\r\n    };\r\n\r\n    const material = new THREE.MeshStandardMaterial(meshParams);\r\n    let tempMesh = [...meshes]\r\n    for (let row = 0; row < grid.rows; row++) {\r\n      tempMesh[row] = [];\r\n      for (let col = 0; col < grid.cols; col++) {\r\n        const geometry = new THREE.BoxGeometry(1, .1, 1);\r\n        const mesh = getMesh(geometry, material);\r\n        mesh.position.y = -1;\r\n        mesh.name = `cube-${row}-${col}`;\r\n        const pivot = new THREE.Object3D();\r\n\r\n        pivot.add(mesh);\r\n        pivot.scale.set(1, 1, 1);\r\n        pivot.position.set(col + (col * gutter.size), 0, row + (row * gutter.size));\r\n\r\n        tempMesh[row][col] = pivot;\r\n        groupMesh.add(pivot);\r\n      }\r\n    }\r\n    setMeshes(tempMesh)\r\n    const centerX = ((grid.cols) + ((grid.cols) * gutter.size)) * .4;\r\n    const centerZ = ((grid.rows) + ((grid.rows) * gutter.size)) * .6;\r\n    groupMesh.position.set(-centerX, 1, -centerZ);\r\n    waterMesh.current.add(groupMesh);\r\n  }\r\n\r\n  const draw = () => {\r\n    let tempMesh = [...meshes];\r\n    for (let row = 0; row < grid.rows; row++) {\r\n      for (let col = 0; col < grid.cols; col++) {\r\n        const dist = distance(col, row, ripple.x - waterMesh.current.children[0].position.x, ripple.z - waterMesh.current.children[0].position.z);\r\n        if (dist < radius) {\r\n          const offset = map(dist, 0, -waveLength, -100, 100);\r\n          const updatedAngle = angle + offset;\r\n          const y = map(Math.sin(updatedAngle), -1, 0, motion > 0 ? 0 : motion, 0);\r\n          tempMesh[row][col].position.y = y;\r\n        }\r\n      }\r\n    }\r\n    const updatedAngle = angle - velocity * 1\r\n    const updatedRadius = radius - velocity * 1\r\n    const updatedMotion = motion - velocity / 8\r\n    setAngle(updatedAngle)\r\n    setRadius(updatedRadius)\r\n    setMotion(updatedMotion);\r\n  }\r\n  useEffect(() => {\r\n    if (waterMesh.current) {\r\n      window.addEventListener('visibilitychange', (evt) => {\r\n        setPause(evt.target.hidden);\r\n      }, false);\r\n      createGrid();\r\n      addFloor();\r\n    }\r\n  }, [])\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const waterDrop = addWaterDrop();\r\n      const { x, z } = getRandomWaterDropPosition();\r\n\r\n      waterDrop.position.set(x, 50, z);\r\n      if (waterMesh.current) {\r\n        waterMesh.current.add(waterDrop);\r\n        if (pause) {\r\n          waterMesh.current.remove(waterDrop);\r\n          TweenMax.killAll(true);\r\n        } else {\r\n          TweenMax.to(waterDrop.position, 1, {\r\n            ease: Sine.easeIn,\r\n            y: -2,\r\n            onUpdate: () => {\r\n              if (waterDrop.position.y <= 1) {\r\n                setRadius(1);\r\n                setMotion(-1);\r\n                setRipple({ x, z });\r\n              }\r\n            },\r\n            onComplete: () => {\r\n              waterDrop.position.set(0, 50, 0);\r\n              waterMesh.current.remove(waterDrop);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }, 1300);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n  useFrame(() => {\r\n    draw();\r\n  })\r\n  return (\r\n    <group ref={waterMesh}>\r\n    </group>\r\n  );\r\n}","import React, { useState } from \"react\"\r\nimport { SketchPicker } from \"react-color\";\r\nimport * as THREE from 'three'\r\nimport { Suspense } from 'react'\r\nimport { Canvas, useFrame, useLoader } from '@react-three/fiber'\r\nimport { useGLTF, ContactShadows, Environment, OrbitControls } from \"@react-three/drei\"\r\n\r\nimport Header from \"../components/header\"\r\nimport RainWater from '../components/RainWater';\r\n\r\n\r\n\r\n\r\nfunction BottomScene() {\r\n\r\n  const texture = useLoader(THREE.TextureLoader, 'floor.png')\r\n  texture.wrapS = THREE.RepeatWrapping;\r\n  texture.wrapT = THREE.RepeatWrapping;\r\n  texture.repeat.set(10, 10)\r\n\r\n  return (\r\n    <mesh position={[0, -0.1, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={[5, 5, 5]}>\r\n      <planeBufferGeometry attach=\"geometry\" args={[10, 10]} />\r\n      <meshBasicMaterial attach=\"material\" map={texture} side={2} />\r\n    </mesh>\r\n  )\r\n}\r\n\r\nexport function RoundPlatform(props) {\r\n  const { nodes, materials } = useGLTF(\"round_platform.glb\");\r\n  return (\r\n    <group {...props} dispose={null}>\r\n      <group>\r\n        <group rotation={[0, 0, 0]}>\r\n          <group scale={0.005}>\r\n            <mesh\r\n              castShadow\r\n              receiveShadow\r\n              geometry={nodes.pCylinder1_defaultPolygonShader1_0.geometry}\r\n              material={materials.defaultPolygonShader1}\r\n            />\r\n          </group>\r\n        </group>\r\n      </group>\r\n    </group>\r\n  );\r\n}\r\nfunction Scene() {\r\n  const [blockPickerColor, setBlockPickerColor] = useState(\"#37d67a\");\r\n  const RotatingBoxPlatform = () => {\r\n    const platformMesh = React.useRef();\r\n    useFrame(() => {\r\n      platformMesh.current.rotateY(0.03)\r\n    });\r\n\r\n    return (\r\n      <mesh ref={platformMesh} position={[0, 1, 0]}>\r\n        <boxBufferGeometry />\r\n        <meshPhongMaterial color={blockPickerColor} />\r\n      </mesh>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"flex\">\r\n        <div id=\"canvas-container\" style={{ width: \"100vw\", height: \"80vh\" }}>\r\n          <Canvas shadows gl={{ antialias: false }} camera={{ position: [0, 10, 45], near: 30, far: 500, fov: 12 }}>\r\n            <Suspense fallback={null}>\r\n              <BottomScene />\r\n              <RotatingBoxPlatform />\r\n              <Environment\r\n                background={true}\r\n                blur={0}\r\n                files={['TropicalSunnyDay_px.jpg', 'TropicalSunnyDay_nx.jpg', 'TropicalSunnyDay_py.jpg', 'TropicalSunnyDay_ny.jpg', 'TropicalSunnyDay_pz.jpg', 'TropicalSunnyDay_nz.jpg']}\r\n                path=\"./\"\r\n                preset={null}\r\n                scene={undefined}\r\n                encoding={undefined}\r\n              />\r\n              <ContactShadows position={[0, -0.8, 0]} opacity={0.25} scale={10} blur={1.5} far={0.8} />\r\n              <OrbitControls\r\n                enableZoom={false}\r\n                enablePan={false}\r\n              />\r\n              <RoundPlatform />\r\n              <RainWater />\r\n              <ambientLight intensity={0.1} />\r\n              <directionalLight />\r\n            </Suspense>\r\n          </Canvas>\r\n        </div>\r\n        <div className=\"pl-4 mt-4\" style={{ width: \"20vw\", height: \"100vh\" }}>\r\n          <SketchPicker\r\n            color={blockPickerColor}\r\n            onChange={(color) => {\r\n              setBlockPickerColor(color.hex);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default Scene;\r\n"],"names":["Header","_useState","useState","_useState2","_slicedToArray","openNav","setOpenNav","navigate","useNavigate","useEffect","window","addEventListener","innerWidth","navList","_jsxs","className","children","_jsx","Typography","as","variant","color","href","onClick","Navbar","IconButton","ripple","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","MobileNav","open","distance","x1","y1","x2","y2","Math","sqrt","pow","map","value","istart","istop","ostart","ostop","RainWater","waterMesh","React","x","z","waterDropPositions","_useState3","_useState4","pause","setPause","_useState5","_useState6","meshes","setMeshes","_useState7","_useState8","setRipple","_useState9","_useState10","angle","setAngle","_useState11","_useState12","radius","setRadius","_useState13","_useState14","motion","setMotion","grid","gutter","getMesh","geometry","material","mesh","THREE","castShadow","receiveShadow","current","evt","target","hidden","groupMesh","emissive","metalness","opacity","transparent","tempMesh","_toConsumableArray","row","col","position","y","name","concat","pivot","add","scale","set","centerX","centerZ","createGrid","floor","rotateX","PI","addFloor","interval","setInterval","waterDrop","addWaterDrop","_getRandomWaterDropPo","random","length","remove","TweenMax","ease","Sine","onUpdate","onComplete","clearInterval","useFrame","dist","offset","updatedAngle","sin","updatedRadius","velocity","updatedMotion","draw","ref","BottomScene","texture","useLoader","wrapS","wrapT","repeat","rotation","attach","args","side","RoundPlatform","props","_useGLTF","useGLTF","nodes","materials","_objectSpread","dispose","pCylinder1_defaultPolygonShader1_0","defaultPolygonShader1","blockPickerColor","setBlockPickerColor","RotatingBoxPlatform","platformMesh","rotateY","_Fragment","id","style","width","height","Canvas","shadows","gl","antialias","camera","near","far","fov","Suspense","fallback","Environment","background","blur","files","path","preset","scene","undefined","encoding","ContactShadows","OrbitControls","enableZoom","enablePan","intensity","SketchPicker","onChange","hex"],"sourceRoot":""}